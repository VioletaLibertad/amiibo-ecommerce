{"version":3,"sources":["redux/actions.js","redux/reducers.js","redux/api.js","redux/sagas.js","redux/store.js","components/CartModal/index.js","routes/index.js","components/Navbar/index.js","components/BaseCard/index.js","views/Home/index.js","views/Checkout/index.js","App.js","serviceWorker.js","index.js"],"names":["receiveAmiiboList","data","type","removeFromCart","initialState","amiiboList","cart","rootReducer","state","filter","item","tail","fetchAmiiboList","a","fetch","response","ok","json","amiibo","splice","getAmiiboList","mySaga","call","forEach","element","price","Math","round","random","put","console","log","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","CartModal","props","useState","total","setTotal","dispatch","useDispatch","useSelector","useEffect","length","totalValue","reduce","sum","elem","Modal","aria-labelledby","centered","Header","closeButton","Title","id","Body","Table","borderless","responsive","map","key","character","amiiboSeries","Button","size","variant","onClick","block","Footer","style","justifyContent","to","onHide","Navbar","modalShow","setModalShow","showCart","Nav","className","Item","show","BaseCard","productAdded","setProductAdded","cardData","itemInCart","find","Card","Img","loading","src","image","name","Text","Home","Container","CardColumns","Spinner","animation","Checkout","striped","bordered","hover","Row","textAlign","Col","App","basename","window","location","pathname","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b0d06a82.chunk.js","sourcesContent":["// Action Types\nexport const REQUEST_AMIIBO_LIST = \"REQUEST_AMIIBO_LIST\";\nexport const RECEIVE_AMIIBO_LIST = \"RECEIVE_AMIIBO_LIST\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const GET_CART = \"GET_CART\";\nexport const CLEAN_CART = \"CLEAN_CART\";\n\n// Action Creators\nexport const requestAmiiboList = () => ({ type: REQUEST_AMIIBO_LIST });\nexport const receiveAmiiboList = data => ({ type: RECEIVE_AMIIBO_LIST, data });\n\nexport const addToCart = data => ({ type: ADD_TO_CART, data });\nexport const removeFromCart = data => ({ type: REMOVE_FROM_CART, data });\nexport const getCart = () => ({ type: GET_CART });\nexport const cleanCart = () => ({ type: CLEAN_CART });","import { RECEIVE_AMIIBO_LIST, ADD_TO_CART, REMOVE_FROM_CART, GET_CART, CLEAN_CART } from './actions';\n\nconst initialState = {\n  amiiboList: [],\n  cart: [],\n};\n\nconst rootReducer = (state = initialState, { type, data }) => {\n  switch (type) {\n    case RECEIVE_AMIIBO_LIST:\n      return {\n        ...state,\n        amiiboList: data\n      };\n    case ADD_TO_CART:\n      return { \n        ...state,\n        cart: [...state.cart, data]\n      };\n    case REMOVE_FROM_CART:\n      return {\n        ...state,\n        cart: state.cart.filter(item => item.tail !== data.tail)\n      };\n    case GET_CART:\n      return {\n        ...state,\n        cart: state.cart\n      };\n    case CLEAN_CART:\n      return {\n        ...state,\n        cart: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","\nexport const fetchAmiiboList = async () => {\n  const response = await fetch(`https://www.amiiboapi.com/api/amiibo/`);\n  if (response.ok) {\n    let data = await response.json();\n    data = data.amiibo.splice(0, 100);\n    return data;\n  } else {\n    return false;\n  }\n}","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { REQUEST_AMIIBO_LIST, receiveAmiiboList } from './actions';\nimport { fetchAmiiboList } from './api';\n\nfunction* getAmiiboList() {\n  try {\n    const data = yield call(fetchAmiiboList);\n    data.forEach((element) => {\n      element.price = Math.round(Math.random()*10000);\n    });\n    yield put(receiveAmiiboList(data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default function* mySaga() {\n  yield takeEvery(REQUEST_AMIIBO_LIST, getAmiiboList);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport mySaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware),\n);\n\nsagaMiddleware.run(mySaga);","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './style.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport { Link } from 'react-router-dom';\nimport { checkout } from '../../routes';\nimport { removeFromCart } from '../../redux/actions';\n\n\nfunction CartModal(props) {\n  const [total, setTotal] = useState(0);\n  const dispatch = useDispatch();\n\n  const cart = useSelector(state => state.cart);\n\n  useEffect(() => {\n    if (cart.length > 0) {\n      let totalValue = cart.reduce((sum, elem) => sum + elem.price, 0);\n      setTotal(totalValue);\n    }\n  }, [cart]);\n\n  return(\n    <Modal\n      {...props}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Tus futuros amiibos\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {cart.length > 0\n          ? <Table borderless responsive>\n              <thead>\n                <tr>\n                  <th>Personaje</th>\n                  <th>Amiibo Serie</th>\n                  <th>Tipo</th>\n                  <th>Valor</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {cart.map(elem =>\n                  <tr key={elem.tail}>\n                    <td>{elem.character}</td>\n                    <td>{elem.amiiboSeries}</td>\n                    <td>{elem.type}</td>\n                    <td>${elem.price}</td>\n                    <td>\n                      <Button size=\"sm\" variant=\"danger\" \n                      onClick={() => dispatch(removeFromCart(elem))} block>\n                        Remover\n                      </Button>\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </Table>\n          : <h3>Tu carrito está vacío, ve a buscar algunos amiibos :D</h3>\n        }\n      </Modal.Body>\n      <Modal.Footer style={{justifyContent:'space-around'}}>\n        {cart.length > 0 \n          ? <>\n              <p>Total: ${total}</p>\n              <Link to={checkout} onClick={props.onHide}>\n                <Button>\n                ¡Quiero mis amiibo!\n                </Button>\n              </Link>\n            </>\n          : <Button onClick={props.onHide}>\n            Seleccionar amiibos\n          </Button>\n        }\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default CartModal;","export const home = '/';\nexport const checkout = '/checkout';","import React, { useState } from 'react';\nimport './style.css';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport CartModal from '../CartModal/index';\n\nfunction Navbar(props) {\n  const [modalShow, setModalShow] = useState(false);\n\n  let showCart = props.showCart;\n\n  return (\n    <>\n      <Nav className=\"navbar\">\n        <Nav.Item>\n          <h3>AmiiboStore</h3>\n        </Nav.Item>\n        <Nav.Item>\n          {showCart  \n            ? <Button variant=\"info\" onClick={() => setModalShow(true)}>Ver Carrito</Button>\n            : null\n          }\n        </Nav.Item>\n      </Nav>\n      <CartModal show={modalShow} onHide={() => setModalShow(false)} />\n    </>\n  );\n}\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './style.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { addToCart, removeFromCart } from '../../redux/actions';\n\nfunction BaseCard(props) {\n  const [productAdded, setProductAdded] = useState(false);\n  const dispatch = useDispatch();\n\n  const cart = useSelector(state => state.cart);\n  let cardData = props.data;\n  let itemInCart = cart.find(item => item.tail === cardData.tail);\n\n  useEffect(() => {\n    if (itemInCart) {\n      setProductAdded(true);\n    } else {\n      setProductAdded(false);\n    }\n  }, [itemInCart]);\n\n  return(\n    <Card className=\"baseCard\">\n      <Card.Img loading=\"lazy\" className=\"cardImg\" variant=\"top\" src={cardData.image} />\n      <Card.Body>\n        <Card.Title>{cardData.name}</Card.Title>\n        <Card.Text>{cardData.amiiboSeries}</Card.Text>\n        <Card.Text>{cardData.type}</Card.Text>\n        <Card.Title>$ {cardData.price}</Card.Title>\n      </Card.Body>\n      <Card.Footer>\n        {!productAdded\n          ? <Button variant=\"primary\" \n            onClick={() => {\n              dispatch(addToCart(cardData));\n              setProductAdded(true)}} block>\n                Agregar al carrito\n            </Button>\n          : <Button variant=\"danger\" \n            onClick={() => {\n              dispatch(removeFromCart(cardData));\n              setProductAdded(false)}} block>\n                Remover del carrito\n            </Button>\n        }\n      </Card.Footer>\n    </Card>\n  );\n}\n\nexport default BaseCard;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Navbar from '../../components/Navbar/index';\nimport BaseCard from '../../components/BaseCard';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport { REQUEST_AMIIBO_LIST } from '../../redux/actions';\n\nfunction Home() {\n  const dispatch = useDispatch();\n\n  const amiiboList = useSelector(state => state.amiiboList);\n\n  useEffect(() => {\n    if (amiiboList.length === 0) {\n      dispatch({ type: REQUEST_AMIIBO_LIST });\n    }\n  });\n\n  return (\n    <div>\n      <Navbar showCart={true} />\n      <Container>  \n        <h2>Bienvenid@ a la mejor tienda de Amiibos</h2>\n        <CardColumns>\n          {amiiboList ? \n            amiiboList.map(elem => <BaseCard key={elem.tail} data={elem} />)\n            : <Spinner animation=\"grow\" />\n          }\n        </CardColumns>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Navbar from '../../components/Navbar/index';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport { Link } from 'react-router-dom';\nimport { home } from '../../routes';\nimport { CLEAN_CART } from '../../redux/actions';\n\nfunction Checkout() {\n  const [total, setTotal] = useState(0);\n  const dispatch = useDispatch();\n\n  const cart = useSelector(state => state.cart);\n\n  useEffect(() => {\n    if (cart.length > 0) {\n      let totalValue = cart.reduce((sum, elem) => sum + elem.price, 0);\n      setTotal(totalValue);\n    }\n  }, [cart]);\n\n  return (\n    <div>\n      <Navbar showCart={false} />\n      <Container>\n        <h3>Resumen de tu compra</h3>\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>Personaje</th>\n              <th>Nombre</th>\n              <th>Amiibo Serie</th>\n              <th>Tipo</th>\n              <th>Valor</th>\n            </tr>\n          </thead>\n          <tbody>\n            {cart.map(elem =>\n              <tr key={elem.tail}>\n                <td>{elem.character}</td>\n                <td>{elem.name}</td>\n                <td>{elem.amiiboSeries}</td>\n                <td>{elem.type}</td>\n                <td>${elem.price}</td>\n              </tr>\n            )}\n          </tbody>\n        </Table>\n        <Row style={{textAlign: 'center'}}>\n          <Col>\n            <Link to={home}>\n              <Button>\n                Seguir comprando\n              </Button>\n            </Link>\n          </Col>\n          <Col>\n            <h3>Total: ${total}</h3>\n          </Col>\n          <Col>\n            <Link to={home}>\n              <Button onClick={() => dispatch({ type: CLEAN_CART })}>\n                Ir al pago\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Checkout;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store.js';\nimport Home from './views/Home/index';\nimport Checkout from './views/Checkout/index';\nimport * as routes from './routes';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router basename={window.location.pathname || ''}>\n        <Route exact path={routes.home} component={Home} />\n        <Route path={routes.checkout} component={Checkout} />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}